import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
adv=pd.read_csv('/content/advertising.csv')
adv
adv.shape
adv.info()
adv.columns
adv.isnull().sum()
adv.describe()
sns.pairplot(adv,x_vars=['TV','Radio','Newspaper'],y_vars=['Sales'],kind='scatter')
fig,axs=plt.subplots(3,figsize=(10,10))
plt1=sns.boxplot(adv['TV'],color='red',ax=axs[0])
plt2=sns.boxplot(adv['Newspaper'],color='lightgreen',ax=axs[1])
plt3=sns.boxplot(adv['Radio'],color='pink',ax=axs[2])
plt.tight_layout()
fig, axs = plt.subplots(3, figsize=(10, 10))

plt1 = sns.histplot(adv['TV'], color='red', kde=True, ax=axs[0])
plt2 = sns.histplot(adv['Newspaper'], color='lightgreen', kde=True, ax=axs[1])
plt3 = sns.histplot(adv['Radio'], color='pink', kde=True, ax=axs[2])

plt.tight_layout()
plt.show()
corr=adv[['TV','Radio','Newspaper']].corr()
sns.heatmap(corr,annot=True,cmap='Oranges')
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
x_test=adv[['TV','Radio','Newspaper']]
y_test=adv['Sales']
import statsmodels.api as sm
x1_test=sm.add_constant(x_test)
reg=sm.OLS(y_test,x1_test)
model=reg.fit()
print(model.summary())
residual=model.resid
residual
x_train,x_test,y_train,y_test=train_test_split(x_test,y_test,test_size=0.2,random_state=22)
len(x_train),len(x_test),len(y_train),len(y_test)
lr=LinearRegression()
lr.fit(x_train,y_train)
y_predict=lr.predict(x_test)
y_predict
y_test
sns.histplot(residual,bins=70,kde=True)
